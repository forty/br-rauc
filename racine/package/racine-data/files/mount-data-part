#!/bin/sh

# Auto expand /dev/data partition
# Mount persited file systems

set -e

PATH=/usr/sbin:/usr/bin:/sbin:/bin

PARTITION="$(readlink -f /dev/disk/by-label/data)"
PARTITION_NAME="$(basename "${PARTITION}")"
DEVICE_NAME="$(basename $(readlink -f /sys/class/block/${PARTITION_NAME}/../))"
DEVICE="/dev/${DEVICE_NAME}"
PART_NUM="$(cat "/sys/class/block/${PARTITION_NAME}/partition")"

expand_data_part() {
    free="$(parted -ms "${DEVICE}" unit B print free quit | tail -1)"

    if ! echo "${free}" | grep -q 'free;$'; then
        echo "Cannot expand data partition: no free space"
        return 0
    fi

    echo "Expanding data partition (${PARTITION})"
    parted -ms "${DEVICE}" resizepart "${PART_NUM}" 100% quit
    resize2fs "${PARTITION}"
}

create_file() {
    file="$1"
    src="$2"

    mkdir -p "$(dirname "${file}")"

    if [ -n "${src}" ]; then
        cp -a "${src}" "${file}"
    else
        touch "${file}"
    fi
}

create_dir() {
    file="$1"
    src="$2"

    mkdir -p "${file}"

    if [ -n "${src}" ]; then
        cp -a "${src}/." "${file}"
    fi
}

expand_data_part

mount "${PARTITION}" /data

for fs in $(cat /etc/persist.list); do
    datafs="/data/${fs}"
    last="${fs: -1}"
    if [ ! -e "${datafs}" ]; then
        # create the file to mount
        if [ -d "${fs}" ]; then
            create_dir "${datafs}" "${fs}"
        elif [ -f "${fs}" ]; then
            create_file "${datafs}" "${fs}"
        elif [ "$last" = / ]; then
            create_dir "${datafs}"
        else
            create_file "${datafs}"
        fi
    fi
    if [ ! -e "${fs}" ]; then
        # try creating the mount point
        # expect it to fail in most cases as rootfs is R/O
        if [ "$last" = / ]; then
            create_dir "${fs}" || true
        else
            create_file "${fs}" || true
        fi
    fi
    if [ -e "${fs}" ]; then
        mount --bind "${datafs}" "${fs}"
    else
        echo "Could not mount on ${fs} as it does not exist and we could not create it"
    fi
done
