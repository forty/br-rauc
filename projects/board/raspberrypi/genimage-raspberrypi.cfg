image uboot.vfat {
  vfat {
    files = {
      "rpi-firmware/bootcode.bin",
      "rpi-firmware/cmdline.txt",
      "rpi-firmware/config.txt",
      "rpi-firmware/fixup.dat",
      "rpi-firmware/start.elf",
      "u-boot.bin",
      "boot.scr"
    }

    label = "uboot"
  }
  size = 32M
}

image data.ext4 {
  ext4 {
    label = "data"
    use-mke2fs = "true"
  }
  size = 32M
}


image rootfsa.ext4 {
  file {
    name = "rootfs.ext4"
    copy = true
  }
  temporary = true
  exec-post = 'tune2fs -L "@RACINE_BOOT_ROOTFS_A_LABEL@" -U @RACINE_BOOT_ROOTFS_A_UUID@ "${IMAGEOUTFILE}"'
}

image rootfsb.ext4 {
  file {
    name = "rootfs.ext4"
    copy = true
  }
  temporary = true
  exec-post = 'tune2fs -L "@RACINE_BOOT_ROOTFS_B_LABEL@" -U "@RACINE_BOOT_ROOTFS_B_UUID@" "${IMAGEOUTFILE}"'
}

image sdcard.img {
  hdimage {
    # required for root=PARTUUID= style boot with MBR partition tables
    disk-signature = 0x12345678
  }

  partition uboot-env {
    in-partition-table = "no"
    image = "uboot-env.bin"
    offset = 17K # 512 * 34 -> just after gpt (0x4400)
  }

  partition uboot {
    partition-type = 0xC
    bootable = "true"
    image = "uboot.vfat"
  }

  partition rootfsa {
    partition-type = 0x83
    image = "rootfsa.ext4"
  }

  partition rootfsb {
    partition-type = 0x83
    image = "rootfsb.ext4"
  }

  partition data {
    partition-type = 0x83
    image = "data.ext4"
  }
}

image update.raucb {
  rauc {
    files = "rootfs.ext4"

    manifest = "
      [update]
      compatible=@RACINE_BOOT_RAUC_COMPATIBLE@
      version=@RACINE_BOOT_RAUC_VERSION@

      [bundle]
      format=verity

      [image.rootfs]
      filename=rootfs.ext4
    "

    key = "key.pem"
    cert = "cert.pem"
    keyring = "ca.pem"
  }
}
